server:
  port: 8085

spring:
  application:
    name: order-service
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/orders
    username: postgres
    password: vasco
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: order-service-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

api:
  inventory-service: lb://inventory-service/api/v1/products
  kafka:
    topics:
      order-created: "order.created.v1"

springdoc:
  api-docs:
    path: /api-docs

logging:
  level:
    com.example.orderservice: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
